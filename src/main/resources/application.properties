spring.profiles.active=dev

spring.application.name = url-shortner-project
#spring.datasource.url = jdbc:postgresql://localhost:5432/UrlShortner
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:urlshortner}
spring.datasource.username = ${DB_USER:postgres}
spring.datasource.password = ${DB_PASS:1234}
spring.datasource.driver-class-name = org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
server.port = 8080
spring.jpa.show-sql=true
# Ensure schema creation before data insertion
spring.jpa.defer-datasource-initialization = true


api.tag.name = ShortenUrl
api.tag.description = Shorten url using UUID or BASE62

api.shorten.summary = Shorten a URL
api.shorten.description = Shortens a given URL using the specified strategy (UUID or BASE62)

api.resolve.summary = Resolve shortened URL
api.resolve.description = Retrieves the original URL by its short code

api.getall.summary = Get all shortened URLs
api.getall.description = Returns all stored URL mappings

api.delete.summary = Delete a shortened URL
api.delete.description = Deletes a specific shortened URL by its code
api.delete.success.message = URL has been deleted for code: %s

# Errors
error.resolve.not-found  = No URL found for code: %s
error.urls.not-found = No shortened URLs found
error.url.exists = URL already exists
error.shortcode.invalid = Invalid short code
error.shortcode.notfound = Short code not found

